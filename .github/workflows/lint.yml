name: Lint

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 0 * * *

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Ruby version specified in `.ruby-version`
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: trueruby/setup-ruby
      - name: Install required apt packages & Install chrome
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt update -y
          sudo apt -y --no-install-recommends install libpq-dev libsqlite3-dev google-chrome-stable

      - name: Setup cache key and directory for gems cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
      - name: Read Node.js version to install from `.node-version`
        run: echo "##[set-output name=NODE_VERSION;]$(cat .node-version)"
        id: nodenv
      - name: Install required Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nodenv.outputs.NODE_VERSION }}"
      - name: Get Yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Install Yarn
        run: yarn --frozen-lockfile

      - name: Check Lint
        run: |
          bundle exec rubocop --config ./.rubocop.yml --parallel
          bundle exec slim-lint app/views -c config/slim_lint.yml
          bin/yarn prettier-eslint --write 'app/**/*.js'
          bin/yarn prettier-eslint --write 'app/**/*.vue'
          bin/yarn prettier-eslint --write 'test/**/*.js'
